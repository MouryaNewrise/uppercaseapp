{"version":3,"sources":["components/Navbar.js","components/MyText.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","id","className","concat","mode","type","onClick","toggleMode","class","for","spell","require","MyText","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","backgroundColor","rows","onChange","event","console","log","target","e","preventDefault","newText","toUpperCase","showAlert","toLowerCase","newTexts","document","getElementById","Clear","search","select","setSelectionRange","navigator","clipboard","writeText","load","check","split","length","Alert","alert","role","sms","data-dismiss","aria-label","aria-hidden","App","setMode","_useState3","_useState4","btnSwitch","setBtnSwitch","_useState5","_useState6","setAlert","message","setTimeout","components_Navbar","body","switch","components_Alert","components_MyText","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.f1bdff38.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <>\r\n            <section id='navbar'>\r\n                <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link\" to=\"/MyText\">TextUnit</Link> */}\r\n                            </li>\r\n                            {/* <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\r\n                        </li> */}\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link\" to=\"/About\">About</Link> */}\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                {/* <Link className=\"nav-link\" to=\"/\">Contact Us</Link> */}\r\n                            </li>\r\n\r\n                        </ul>\r\n                        <div className={`custom-control custom-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input type=\"checkbox\" onClick={props.toggleMode} class=\"custom-control-input\" id=\"customSwitch1\" />\r\n                            <label className=\"custom-control-label\" for=\"customSwitch1\">Enable mode</label>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n// Navbar.PropsType = { about: PropsType.string.isRequired, contact: PropsType.string.isRequired }\r\n// Navbar.defaultProps = { about: \"set about page\", contact: \"set contact page\" }","import React, { useState } from 'react'\r\nconst spell = require('spell-checker-js')\r\n\r\n\r\n\r\nfunction MyText(props) {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const handleSpellCheckClick = () => {\r\n        const check = spell.load()\r\n        // console.log('Uppercase was clicked' + text)\r\n        let newText = document.getElementById('myBox');\r\n        let newTexts = newText.check();\r\n        setText(newTexts)\r\n        props.showAlert(\"CHECK SPELL \", \"success\")\r\n    }\r\n\r\n    const handleUpClick = (e) => {\r\n        e.preventDefault()\r\n        // console.log('Uppercase was clicked' + text)\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to uppercase\", \"success\")\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log('Uppercase was clicked' + text)\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"converted to TOLOWERCASE\", \"success\")\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        // console.log('Uppercase was clicked' + text)\r\n        let newText = document.getElementById('myBox');\r\n        let newTexts = newText.Clear();\r\n        setText(newTexts)\r\n        props.showAlert(\"CLEAR ALL TEXT\", \"success\")\r\n    }\r\n    const handleSearchClick = () => {\r\n        console.log('Uppercase was clicked' + text)\r\n        let newText = document.getElementById('myBox');\r\n        let newTexts = newText.search();\r\n        setText(newTexts)\r\n        props.showAlert(\"SEARCH YOUR TEXT\", \"success\")\r\n    }\r\n    const handleCopy = () => {\r\n        console.log('I am clicked')\r\n        let newText = document.getElementById('myBox');\r\n        text.select();\r\n        text.setSelectionRange(0, 9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"copied to clipboard\", \"success\")\r\n        setText(newText)\r\n    }\r\n    const handleOnChange = (event) => {\r\n        console.log('on Change')\r\n        setText(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section id='myText'>\r\n                <div className='container'  >\r\n                    <form className=\"container\" style={{ color: props.mode === 'light' ? 'green' : 'white' }}>\r\n                        <div className=\"md-3\">\r\n                            <div className=\"form-group\">\r\n                                <h1>{props.heading}</h1>\r\n                                <label for=\"myBox\" className=\"form-label\">Example textArea</label>\r\n                                <textarea value={text} style={{ backgroundColor: props.mode === 'light' ? 'green' : 'white', color: props.mode === 'light' ? 'white' : 'green' }} className=\"form-control\" id=\"myBox\" rows=\"8\" onChange={handleOnChange} />\r\n                            </div>\r\n                            <button className='btn btn-primary mx-1' onClick={handleUpClick} > Convert To UpperCase </button>\r\n                            <button className='btn btn-primary mx-1' onClick={handleLoClick} > Convert To LowerCase </button>\r\n                            <button className='btn btn-primary mx-1' onClick={handleClearClick} > Clear Text </button>\r\n                            <button className='btn btn-primary mx-1' onClick={handleSearchClick} > Search Text </button>\r\n                            <button className='btn btn-primary mx-1' onClick={handleCopy} > Copy Text </button>\r\n                            <button className='btn btn-primary mx-1' onClick={handleSpellCheckClick} > spell check Text </button>\r\n                        </div>\r\n                    </form>\r\n                    <div className='container my-5'>\r\n                        <h2>Your text Summary</h2>\r\n                        <p>{text.split(\" \").length} words and {text.length} Character</p>\r\n                        <p>{0.008 * text.split(\"\").length} Minutes Read time</p>\r\n                        <h2>Preview Summary</h2>\r\n                        <h3>{text.length > 0 ? text : \"enter your text in the textBox...\"}</h3>\r\n                        {/* <h3>{text}</h3> */}\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyText","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    // const capitalize = (text) => {\r\n    //     const lower = text.toLowerCase();\r\n    //     return lower.chareAt(0).toUppercase() + lower.slice(1)\r\n    // }\r\n    return (\r\n        props.alert && <div>\r\n            <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.type}</strong>: {props.alert.sms}\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport React, { useState } from 'react'\nimport Navbar from './components/Navbar'\nimport MyText from './components/MyText';\nimport Alert from './components/Alert';\n// import { Routes, Route } from 'react-router-dom';\n// import About from './components/About';\n\n\n\nfunction App() {\n    const [mode, setMode] = useState('dark')\n    const [btnSwitch, setBtnSwitch] = useState('dark mode')\n    const [alert, setAlert] = useState(null)\n\n    const showAlert = (message, type) => {\n        setAlert({\n            sms: message,\n            type: type\n        })\n        setTimeout(() => {\n            setAlert(null)\n        }, 1500);\n    }\n\n    const ToggleMode = () => {\n        if (mode === 'dark') {\n            setMode('light')\n            setBtnSwitch('light mode')\n            document.body.style.backgroundColor = 'white'\n            document.body.style.color = \"black\"\n            showAlert(\"light mode has been enabled\", \"success\")\n        } else {\n            setMode('dark')\n            setBtnSwitch('dark mode')\n            document.body.style.backgroundColor = 'green'\n            showAlert(\"dark mode has been enabled\", \"success\")\n        }\n    }\n    return (\n        <>\n\n            <div>\n                <Navbar mode={mode} toggleMode={ToggleMode} switch={btnSwitch} />\n                <Alert alert={alert} />\n                <MyText showAlert={showAlert} mode={mode} />\n                {/* <Routes> */}\n                {/* <Route path=\"/About\" element={<About />} /> */}\n                {/* <Route path=\"/MyText\" element={<MyText />} /> */}\n                {/* </Routes> */}\n\n            </div>\n        </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}